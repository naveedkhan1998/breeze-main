name: "Backend"

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "backend/**/pyproject.toml"

      - name: Install dependencies
        working-directory: ./backend
        run: |
          uv sync --dev --frozen

      - name: Run Black (formatting check)
        working-directory: ./backend
        run: |
          uvx black --check --diff .

      - name: Run Ruff (linting)
        working-directory: ./backend
        run: |
          uvx ruff check --output-format=github .

      - name: Run Tests
        working-directory: ./backend
        run: |
          uv run pytest --verbose --tb=short --cov=. --cov-report=xml --cov-report=term-missing

      - name: Backend Quality Summary
        if: always()
        run: |
          echo "### Backend Code Quality Results" >> $GITHUB_STEP_SUMMARY
          echo "- Python version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Black formatting: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- Ruff linting: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- Tests: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.13'
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage

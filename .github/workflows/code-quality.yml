name: Code Quality Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Detect file changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'

  backend-checks:
    name: Backend Code Quality
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install UV
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        uv sync --dev --frozen
    
    - name: Run Black (formatting check)
      working-directory: ./backend
      run: |
        uvx black --check --diff .
      continue-on-error: false
    
    - name: Run Ruff (linting)
      working-directory: ./backend
      run: |
        uvx ruff check --output-format=github .
      continue-on-error: false
    
    - name: Run Ruff (formatting check)
      working-directory: ./backend
      run: |
        uvx ruff format --check --diff .
      continue-on-error: false

  frontend-checks:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run Prettier (formatting check)
      working-directory: ./frontend
      run: |
        npx prettier --check "src/**/*.{js,jsx,ts,tsx,json,css,md}" --ignore-path .gitignore
      continue-on-error: false
    
    - name: Run ESLint
      working-directory: ./frontend
      run: |
        npm run lint
      continue-on-error: false
    
    - name: Run Tests
      working-directory: ./frontend
      run: |
        npm run test:run
      continue-on-error: false
